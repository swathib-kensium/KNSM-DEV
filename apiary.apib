FORMAT: 1A
HOST: https://xmsqa6.fusionrms.com/Admin/GraphQL

# RMS API

This section describes the RMS application programming interface (API), which can be used to integrate RMS with other software systems.

RMS provides a GraphQL API that enables clients to query and update RMS data. A thorough understanding of GraphQL is necessary to understand how to use the API.

**Notes:** 

+ See https://graphql.org/ for more information about GraphQL.
+ This link contains information about how to create GraphQL queries, and many links to development tools that can help you access the APIs programmatically

## OpenID Connect

Programmatic API access is protected through Open ID Connect. To access the API, your development tools and libraries must support authentication through Open ID Connect and the related OAuth technologies.

OpenID Connect (OIDC) is a large and complex specification, which can be found at: https://openid.net/developers/specs/. Before wading into the details of understanding OIDC, we recommend that you choose a client library that corresponds to your programming environment first. Typically the client library documentation will provide better insight into how you can connect and authenticate via OIDC.

A list of certified client library implementations can be found at: https://openid.net/developers/certified/#RPLibs.

Communications from a trusted client - for example, a server computer that only you have access to - are usually best handled by the Client Credentials Flow. This type of authentication is described within our documentation.

**Notes:** Communications from non-trusted clients - for example, software deployed to a non-secure environment like a store - may require a different OIDC flow type. Ensure that you understand the implications of the available OIDC flow types and when they should be used. It is your responsibility to secure your software client and the OIDC flow type that is used.

## Graph QL Client

The RMS admin console provides a feature to let you test your GraphQL queries. You can access this tool via the Configuration / GraphiQL menu.

In addition to testing your queries while developing integration code, this tool can be helpful if you want to perform simple ad-hoc queries during daily operations.

**Notes:** 
+ You can also use the tool to view reference documentation for each endpoint - simply click entity or field names to access the documentation.

## Permissions

GraphQL queries are subject to the permissions of the account that is executing the query. For this reason, you may encounter security errors when attempting to execute certain queries.

If you run into these errors, a manager can adjust security permissions through Users and Roles.

Documentation below describes the types of permissions that are required to access endpoints.

## API Overview

The RMS API is a work-in-progress: API endpoints are being added and expanded with each new RMS version.
</br>**Query**
+ customer
+ environment
+ giftcard
+ item
+ itemSerialLot
+ itemWarehouse
+ location
+ product
+ productBanner
+ productGroup
+ productNotice
+ productSection
+ productSortOption
+ sale

</br>**Mutation**
+ giftcardAdd
+ giftcardEdit
+ giftcardTransAdd
+ giftcardTransCapture
+ purchaseAdd

**Note:** - Your application should only use the supported endpoints listed above.

## Unsupported Endpoints

Any other endpoints are currently not supported. They are for internal use only, or are in a preview stage of development. These endpoints may change, be removed or renamed at any time.

**Note:** Donâ€™t see an API that you need, or would you like to use one of the unsupported endpoints? Contact Fusion Support - your input is invaluable to creation and finalization of our APIs.

## Tasks

### Authenticating Client Credentials [POST /myquery]

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
                
### Handling Errors [POST /myquery]

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }

### Since & Until Values [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
                
### Get Environment Info [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
                
### Get Customer [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }

### Get Inventory [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
### Get Sale History [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
### Get Gift Card [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
                
### Create Gift Card [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
### Edit Gift Card [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
### Create Gift Card Transaction [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }
### Record Purchase [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }

### Make Terminal Payments [POST /myquery]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        query MyQuery  {
                          sale(since: "1554830160000;4499096027743125506;", first: 2) {
                            until
                            results {
                              id
                            }
                        }
                    }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "data": {
                    "sale": {
                      "until": "1554830160000;4499096027743125506;",
                      "results": [
                        {
                          "id": "4499096027743125505"
                        },
                        {
                          "id": "4499096027743125506"
                        }
                      ]
                    }
                  }
                }